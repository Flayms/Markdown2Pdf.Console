# This workflow tests, builds and publishes the project on github

name: publish
on: [workflow_dispatch]
env:
  # Specifiy dotnet SDK Version
  DOTNET_VERSION: '6.0.x'

jobs:
  ci:
    name: publish-job
    runs-on: ubuntu-latest

    # Need write permission for creating release-notes file
    permissions:
      contents: write

    steps:
    # Check out the source code at the latest commit
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Create new version from commits and write to enviornment variables (env.Version_Number + env.Tag_Name + env.Release_Name)
    - name: Create Version
      run: bash ".github/workflows/create-next-version.sh" 
    
    # Install the .NET SDK on the build machine
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    # Install any NuGet packages required.
    - name: Install dependencies
      run: dotnet restore

    # Publish the project
    - name: Publish
      run: dotnet publish ".\Markdown2Pdf.Console\Markdown2Pdf.Console.csproj" -c:Release -o:"Markdown2Pdf.Console\bin\Publish\\" /p:Version=${{ env.Version_Number }}

    # Zip the publish
    - name: Zip windows build
      uses: thedoctor0/zip-release@master
      with:
        path: .\Markdown2Pdf.Console\bin\Publish\
        filename: windows-build.zip

    # Create Release Log
    # Need to fetch, otherwise doesn't know last commits
    - name: Git Fetch
      shell: bash
      run: git fetch --depth=500

    - name: Create release-notes
      run: bash ".github/workflows/create-release-notes.sh" "${{ github.repository }}" ${{ env.Tag_Name }} "${{ github.workspace }}\release-notes.md"
      
    - name: Show release-notes
      run: cat "${{ github.workspace }}\release-notes.md"   

    # Create Release
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "${{ env.Tag_Name }}"
        name: "${{ env.Release_Name }}"
        body_path: "${{ github.workspace }}\\release-notes.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          windows-build.zip
