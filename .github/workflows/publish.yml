# This workflow tests, builds and publishes the project on github

name: publish
on: [workflow_dispatch]
env:
  # Specifiy dotnet SDK Version
  DOTNET_VERSION: '8.0.x'

jobs:
  ci:
    name: publish-job
    runs-on: ubuntu-latest

    # Need write permission for creating release-notes file
    permissions:
      contents: write

    steps:
    # Check out the source code at the latest commit
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Create new version from commits and write to enviornment variables (env.VERSION_NUMBER + env.TAG_NAME + env.RELEASE_NAME)
    - name: Create Version
      run: bash ".github/workflows/create-next-version.sh" 
    
    # Install the .NET SDK on the build machine
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    # Install any NuGet packages required.
    - name: Install dependencies
      run: dotnet restore

    # Publish and zip for all runtimes
    - name: Publish
      run: |
       for runtime in win-x64 win-x86 linux-x64; do
         dotnet publish ".\Markdown2Pdf.Console\Markdown2Pdf.Console.csproj" \
           -c:Release \
           -r:$runtime \
           -o:"Markdown2Pdf.Console/bin/$runtime" \
           -p:PublishSingleFile=true \
           -p:SelfContained=true \
           /p:Version=${{ env.VERSION_NUMBER }}
         (cd "Markdown2Pdf.Console/bin/$runtime" && npm install && zip -r ./../md2pdf_$runtime.zip  ./*)
        done

    # Create Release Log
    # Need to fetch, otherwise doesn't know last commits
    - name: Git Fetch
      shell: bash
      run: git fetch --depth=500

    - name: Create release-notes
      run: bash ".github/workflows/create-release-notes.sh" "${{ github.repository }}" ${{ env.Tag_Name }} "${{ github.workspace }}\release-notes.md"
      
    - name: Show release-notes
      run: cat "${{ github.workspace }}\release-notes.md"

    # Create Release
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "${{ env.TAG_NAME }}"
        name: "${{ env.RELEASE_NAME }}"
        body_path: "${{ github.workspace }}\\release-notes.md"
        token: ${{ secrets.GITHUB_TOKEN }}
        files: ./Markdown2Pdf.Console/bin/*.zip

    # Create nuget-package
    - name: Pack
      run: dotnet pack --configuration Release --no-restore /p:Version=${{ env.VERSION_NUMBER }}
      
    # Push nuget-package to nuget.org
    - name: Push
      run: dotnet nuget push Markdown2Pdf.Console/bin/nupkg/Markdown2Pdf.Console.${{ env.VERSION_NUMBER }}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json  --skip-duplicate
